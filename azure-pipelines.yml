trigger:
  - main

# pool:
#   name: Default

variables:
  SDP_GO_LIB_CACHE_FOLDER: $(Pipeline.Workspace)/s/sdp-go-lib-cache

jobs:
  - job: Init
    displayName: "Init: Download and Cache SDP Go Binary"
    steps:
      - task: Bash@3
        displayName: "Fetch Latest Release Tag"
        env:
          GITHUB_TOKEN: $(GH_TOKEN)
        inputs:
          targetType: "inline"
          script: |
            echo "Logging in to GitHub"
            gh auth login --hostname github.tools.sap --with-token <<< "$GITHUB_TOKEN"

            echo "Fetching the latest release tag"
            LATEST_VERSION=$(gh release list --repo concur-sap-ecosystem/sdp-go-library --limit 1 --json tagName -q ".[0].tagName")

            if [ -z "$LATEST_VERSION" ]; then
              echo "Error: Unable to fetch the latest release tag."
              exit 1
            fi

            echo "Latest release tag is $LATEST_VERSION"
            # Export for use within the same job
            echo "##vso[task.setvariable variable=LATEST_VERSION]$LATEST_VERSION"
            # Export for use in other jobs
            echo "##vso[task.setvariable variable=LATEST_VERSION;isOutput=true]$LATEST_VERSION"

      - task: Cache@2
        inputs:
          key: '"concur-sdp-go-library-$(LATEST_VERSION)" | "$(Agent.OS)"'
          path: "$(SDP_GO_LIB_CACHE_FOLDER)/"

      - task: Bash@3
        displayName: "Download Latest Release from GitHub"
        env:
          GITHUB_TOKEN: $(GH_TOKEN)
        inputs:
          targetType: "inline"
          script: |
            echo "Logging in to GitHub"
            gh auth login --hostname github.tools.sap --with-token <<< "$GITHUB_TOKEN"

            echo "Downloading release $LATEST_VERSION from GitHub"
            gh release download "$LATEST_VERSION" \
              --repo concur-sap-ecosystem/sdp-go-library \
              --dir "$(SDP_GO_LIB_CACHE_FOLDER)" \
              --clobber

            echo "Download complete. Files saved to $(SDP_GO_LIB_CACHE_FOLDER)"

      # - task: JFrogGenericArtifacts@1
      #   inputs:
      #     command: "Download"
      #     connection: "artifactory_i851155"
      #     specSource: "taskConfiguration"
      #     fileSpec: |
      #       {
      #         "files": [
      #           {
      #             "pattern": "concur-sdp-go-library/releases/concur-sdp-go-library-$(VERSION)",
      #             "target": "$(SDP_GO_LIB_CACHE_FOLDER)/",
      #             "flat": "true"
      #           }
      #         ]
      #       }
      #     failNoOp: true

      - task: Bash@3
        inputs:
          targetType: "inline"
          script: |
            echo "Listing contents of the default temp directory:"
            ls -la "$(SDP_GO_LIB_CACHE_FOLDER)/"

  - job: SDP
    displayName: "SDP: Call Go Library"
    dependsOn: Init
    variables:
      LATEST_VERSION: $[ dependencies.Init.outputs['LATEST_VERSION'] ]
    steps:
      - task: Cache@2
        inputs:
          key: '"concur-sdp-go-library-$(LATEST_VERSION)" | "$(Agent.OS)"'
          path: "$(SDP_GO_LIB_CACHE_FOLDER)/"

      - task: Bash@3
        inputs:
          targetType: "inline"
          script: |
            echo "Listing contents of tmp directory:"
            ls -la $(SDP_GO_LIB_CACHE_FOLDER)/

      - task: GetFolderContent@1.0.53
        displayName: "Get Folder Content 1.0.53"
        inputs:
          ParentFolder: "$(Pipeline.Workspace)/s"

      - task: torremo@1.0.30
        displayName: Torremo
        inputs:
          stepName: "BakeTimeRing0"
          flags: "--verbose --force --dry-run"
